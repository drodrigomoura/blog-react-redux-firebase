{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","ownProps","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","console","log","doc","set","message","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","projecReducer","rootReducer","combineReducers","projectReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","attachAuthIsReady","useFirestoreForProfile","userProfile","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a74d33c2.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li>\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n                    {props.profile.initials}\n                </NavLink>\n            </li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: ' ' })\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            console.log(resp);\n\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            console.log(err.message);\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">SignUp</NavLink></li>\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props\n    //console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\nconst Notifications = (props) => {\n    const { notifications } = props\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment';\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id} >\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom';\nclass Dashboard extends Component {\n    render() {\n        // console.log(this.props);\n        const { projects, auth, notifications } = this.props\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        return (\n            <div className=\"dasboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props\n    if (!auth.uid) return <Redirect to='/signin' />\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n\n    }\n    return (\n        <div className=\"container center\">\n            <p>Loading project</p>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = e => [\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    ]\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n\n\n    render() {\n        const { authError, auth } = this.props\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">\n                            Login\n                        </button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = e => [\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    ]\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n\n\n    render() {\n        const { auth } = this.props\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">\n                            Sign Up\n                        </button>\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => { dispatch(signUp(newUser)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: '',\n    }\n\n    handleChange = e => [\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    ]\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n\n\n    render() {\n        const { auth } = this.props\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">\n                            Create\n                        </button>\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","\n\nexport const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        //make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project })\n        }).catch((err) => {\n            dispatch({ type: 'create_PROJECT_ERROR', err })\n        })\n    }\n}","import React from 'react';\n/* import logo from './logo.svg';\nimport './App.css'; */\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer\n\n","const initState = {\n    projects: [\n        { id: '1', title: 'help me find peach', content: ' blah blah blah' },\n        { id: '2', title: 'collect all the stars', content: ' blah blah blah' },\n        { id: '3', title: 'egg hung with yoshi', content: ' blah blah blah' },\n    ]\n}\n\nconst projecReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state\n    }\n}\n\nexport default projecReducer\n","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n})\n\nexport default rootReducer","import firebase from \"firebase/app\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar config = {\n    apiKey: \"AIzaSyCZkXqCSu7Lmkjvb2AVuWvOK8LOLVWcTKA\",\n    authDomain: \"marioplan-c0177.firebaseapp.com\",\n    databaseURL: \"https://marioplan-c0177.firebaseio.com\",\n    projectId: \"marioplan-c0177\",\n    storageBucket: \"marioplan-c0177.appspot.com\",\n    messagingSenderId: \"457574165619\",\n    appId: \"1:457574165619:web:a2b9b4edc9ca7930b18e06\"\n};\n// Initialize Firebase\nfirebase.initializeApp(config);\nfirebase.firestore().settings({})\n\n\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(\n      fbConfig,\n      {\n        attachAuthIsReady: true,\n        useFirestoreForProfile: true,\n        userProfile: 'users'\n      }\n    )\n  )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n    , document.getElementById('root')\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n\n})\n\n"],"sourceRoot":""}